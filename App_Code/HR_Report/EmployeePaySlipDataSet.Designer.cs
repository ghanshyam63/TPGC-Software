//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.6407
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Pegasus_ERP_Solution.App_Code.HR_Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EmployeePaySlipDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EmployeePaySlipDataSet : global::System.Data.DataSet {
        
        private dtEmpPayslipDataTable tabledtEmpPayslip;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EmployeePaySlipDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EmployeePaySlipDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtEmpPayslip"] != null)) {
                    base.Tables.Add(new dtEmpPayslipDataTable(ds.Tables["dtEmpPayslip"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtEmpPayslipDataTable dtEmpPayslip {
            get {
                return this.tabledtEmpPayslip;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            EmployeePaySlipDataSet cln = ((EmployeePaySlipDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtEmpPayslip"] != null)) {
                    base.Tables.Add(new dtEmpPayslipDataTable(ds.Tables["dtEmpPayslip"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtEmpPayslip = ((dtEmpPayslipDataTable)(base.Tables["dtEmpPayslip"]));
            if ((initTable == true)) {
                if ((this.tabledtEmpPayslip != null)) {
                    this.tabledtEmpPayslip.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EmployeePaySlipDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EmployeePaySlipDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtEmpPayslip = new dtEmpPayslipDataTable();
            base.Tables.Add(this.tabledtEmpPayslip);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtEmpPayslip() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EmployeePaySlipDataSet ds = new EmployeePaySlipDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtEmpPayslipRowChangeEventHandler(object sender, dtEmpPayslipRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtEmpPayslipDataTable : global::System.Data.TypedTableBase<dtEmpPayslipRow> {
            
            private global::System.Data.DataColumn columnEmpCode;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columnMonth;
            
            private global::System.Data.DataColumn columnYear;
            
            private global::System.Data.DataColumn columnDesignation;
            
            private global::System.Data.DataColumn columnDepartment;
            
            private global::System.Data.DataColumn columnDOJ;
            
            private global::System.Data.DataColumn columnBankAccountNo;
            
            private global::System.Data.DataColumn columnAllowanceName;
            
            private global::System.Data.DataColumn columnAllowanceActAmt;
            
            private global::System.Data.DataColumn columnDeductionName;
            
            private global::System.Data.DataColumn columnDeductionActAmt;
            
            private global::System.Data.DataColumn columnNetSalary;
            
            private global::System.Data.DataColumn columnTypeAllow;
            
            private global::System.Data.DataColumn columnTotalEmpPenalty;
            
            private global::System.Data.DataColumn columnTotalEmpClaim;
            
            private global::System.Data.DataColumn columnTotalEmpLoan;
            
            private global::System.Data.DataColumn columnDaysPresent;
            
            private global::System.Data.DataColumn columnWeekOff;
            
            private global::System.Data.DataColumn columndaysAbsent;
            
            private global::System.Data.DataColumn columnHoliday;
            
            private global::System.Data.DataColumn columnLeaves;
            
            private global::System.Data.DataColumn columnWorkedSal;
            
            private global::System.Data.DataColumn columnLeavedaysSal;
            
            private global::System.Data.DataColumn columnHolidaysSal;
            
            private global::System.Data.DataColumn columnWeekOffSal;
            
            private global::System.Data.DataColumn columnNormalOT;
            
            private global::System.Data.DataColumn columnWeekOT;
            
            private global::System.Data.DataColumn columnHolidayOT;
            
            private global::System.Data.DataColumn columnLatePenalty;
            
            private global::System.Data.DataColumn columnEarlyPenalty;
            
            private global::System.Data.DataColumn columnPartialPenalty;
            
            private global::System.Data.DataColumn columnAbsentPenalty;
            
            private global::System.Data.DataColumn columnTotaldays;
            
            private global::System.Data.DataColumn columntotalAttendSal;
            
            private global::System.Data.DataColumn columnTotalOTSal;
            
            private global::System.Data.DataColumn columnTotalPenaltySal;
            
            private global::System.Data.DataColumn columnNormalOTSal;
            
            private global::System.Data.DataColumn columnWeekOffOTSal;
            
            private global::System.Data.DataColumn columnHolidaysOTSal;
            
            private global::System.Data.DataColumn columnLatePenaSal;
            
            private global::System.Data.DataColumn columnEarlyPenaSal;
            
            private global::System.Data.DataColumn columnPartialPenaSal;
            
            private global::System.Data.DataColumn columnAbsentPenaSal;
            
            private global::System.Data.DataColumn columnTotalAdjustmentAmt;
            
            private global::System.Data.DataColumn columnTotalDeducloanpenaty;
            
            private global::System.Data.DataColumn columnClaimName;
            
            private global::System.Data.DataColumn columnPenaltyName;
            
            private global::System.Data.DataColumn columnLoanName;
            
            private global::System.Data.DataColumn columnGrossAttendanceSal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEmpPayslipDataTable() {
                this.TableName = "dtEmpPayslip";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtEmpPayslipDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtEmpPayslipDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpCodeColumn {
                get {
                    return this.columnEmpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DesignationColumn {
                get {
                    return this.columnDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentColumn {
                get {
                    return this.columnDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOJColumn {
                get {
                    return this.columnDOJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankAccountNoColumn {
                get {
                    return this.columnBankAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllowanceNameColumn {
                get {
                    return this.columnAllowanceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllowanceActAmtColumn {
                get {
                    return this.columnAllowanceActAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeductionNameColumn {
                get {
                    return this.columnDeductionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeductionActAmtColumn {
                get {
                    return this.columnDeductionActAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSalaryColumn {
                get {
                    return this.columnNetSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeAllowColumn {
                get {
                    return this.columnTypeAllow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalEmpPenaltyColumn {
                get {
                    return this.columnTotalEmpPenalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalEmpClaimColumn {
                get {
                    return this.columnTotalEmpClaim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalEmpLoanColumn {
                get {
                    return this.columnTotalEmpLoan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DaysPresentColumn {
                get {
                    return this.columnDaysPresent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeekOffColumn {
                get {
                    return this.columnWeekOff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn daysAbsentColumn {
                get {
                    return this.columndaysAbsent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HolidayColumn {
                get {
                    return this.columnHoliday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeavesColumn {
                get {
                    return this.columnLeaves;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkedSalColumn {
                get {
                    return this.columnWorkedSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeavedaysSalColumn {
                get {
                    return this.columnLeavedaysSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HolidaysSalColumn {
                get {
                    return this.columnHolidaysSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeekOffSalColumn {
                get {
                    return this.columnWeekOffSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NormalOTColumn {
                get {
                    return this.columnNormalOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeekOTColumn {
                get {
                    return this.columnWeekOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HolidayOTColumn {
                get {
                    return this.columnHolidayOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatePenaltyColumn {
                get {
                    return this.columnLatePenalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyPenaltyColumn {
                get {
                    return this.columnEarlyPenalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartialPenaltyColumn {
                get {
                    return this.columnPartialPenalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsentPenaltyColumn {
                get {
                    return this.columnAbsentPenalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotaldaysColumn {
                get {
                    return this.columnTotaldays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalAttendSalColumn {
                get {
                    return this.columntotalAttendSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalOTSalColumn {
                get {
                    return this.columnTotalOTSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPenaltySalColumn {
                get {
                    return this.columnTotalPenaltySal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NormalOTSalColumn {
                get {
                    return this.columnNormalOTSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeekOffOTSalColumn {
                get {
                    return this.columnWeekOffOTSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HolidaysOTSalColumn {
                get {
                    return this.columnHolidaysOTSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatePenaSalColumn {
                get {
                    return this.columnLatePenaSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EarlyPenaSalColumn {
                get {
                    return this.columnEarlyPenaSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartialPenaSalColumn {
                get {
                    return this.columnPartialPenaSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbsentPenaSalColumn {
                get {
                    return this.columnAbsentPenaSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAdjustmentAmtColumn {
                get {
                    return this.columnTotalAdjustmentAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDeducloanpenatyColumn {
                get {
                    return this.columnTotalDeducloanpenaty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClaimNameColumn {
                get {
                    return this.columnClaimName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenaltyNameColumn {
                get {
                    return this.columnPenaltyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LoanNameColumn {
                get {
                    return this.columnLoanName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossAttendanceSalColumn {
                get {
                    return this.columnGrossAttendanceSal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEmpPayslipRow this[int index] {
                get {
                    return ((dtEmpPayslipRow)(this.Rows[index]));
                }
            }
            
            public event dtEmpPayslipRowChangeEventHandler dtEmpPayslipRowChanging;
            
            public event dtEmpPayslipRowChangeEventHandler dtEmpPayslipRowChanged;
            
            public event dtEmpPayslipRowChangeEventHandler dtEmpPayslipRowDeleting;
            
            public event dtEmpPayslipRowChangeEventHandler dtEmpPayslipRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtEmpPayslipRow(dtEmpPayslipRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEmpPayslipRow AdddtEmpPayslipRow(
                        string EmpCode, 
                        string EmpName, 
                        string Month, 
                        string Year, 
                        string Designation, 
                        string Department, 
                        string DOJ, 
                        string BankAccountNo, 
                        string AllowanceName, 
                        string AllowanceActAmt, 
                        string DeductionName, 
                        string DeductionActAmt, 
                        string NetSalary, 
                        string TypeAllow, 
                        string TotalEmpPenalty, 
                        string TotalEmpClaim, 
                        string TotalEmpLoan, 
                        string DaysPresent, 
                        string WeekOff, 
                        string daysAbsent, 
                        string Holiday, 
                        string Leaves, 
                        string WorkedSal, 
                        string LeavedaysSal, 
                        string HolidaysSal, 
                        string WeekOffSal, 
                        string NormalOT, 
                        string WeekOT, 
                        string HolidayOT, 
                        string LatePenalty, 
                        string EarlyPenalty, 
                        string PartialPenalty, 
                        string AbsentPenalty, 
                        string Totaldays, 
                        string totalAttendSal, 
                        string TotalOTSal, 
                        string TotalPenaltySal, 
                        string NormalOTSal, 
                        string WeekOffOTSal, 
                        string HolidaysOTSal, 
                        string LatePenaSal, 
                        string EarlyPenaSal, 
                        string PartialPenaSal, 
                        string AbsentPenaSal, 
                        string TotalAdjustmentAmt, 
                        string TotalDeducloanpenaty, 
                        string ClaimName, 
                        string PenaltyName, 
                        string LoanName, 
                        string GrossAttendanceSal) {
                dtEmpPayslipRow rowdtEmpPayslipRow = ((dtEmpPayslipRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmpCode,
                        EmpName,
                        Month,
                        Year,
                        Designation,
                        Department,
                        DOJ,
                        BankAccountNo,
                        AllowanceName,
                        AllowanceActAmt,
                        DeductionName,
                        DeductionActAmt,
                        NetSalary,
                        TypeAllow,
                        TotalEmpPenalty,
                        TotalEmpClaim,
                        TotalEmpLoan,
                        DaysPresent,
                        WeekOff,
                        daysAbsent,
                        Holiday,
                        Leaves,
                        WorkedSal,
                        LeavedaysSal,
                        HolidaysSal,
                        WeekOffSal,
                        NormalOT,
                        WeekOT,
                        HolidayOT,
                        LatePenalty,
                        EarlyPenalty,
                        PartialPenalty,
                        AbsentPenalty,
                        Totaldays,
                        totalAttendSal,
                        TotalOTSal,
                        TotalPenaltySal,
                        NormalOTSal,
                        WeekOffOTSal,
                        HolidaysOTSal,
                        LatePenaSal,
                        EarlyPenaSal,
                        PartialPenaSal,
                        AbsentPenaSal,
                        TotalAdjustmentAmt,
                        TotalDeducloanpenaty,
                        ClaimName,
                        PenaltyName,
                        LoanName,
                        GrossAttendanceSal};
                rowdtEmpPayslipRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtEmpPayslipRow);
                return rowdtEmpPayslipRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtEmpPayslipDataTable cln = ((dtEmpPayslipDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtEmpPayslipDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEmpCode = base.Columns["EmpCode"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columnMonth = base.Columns["Month"];
                this.columnYear = base.Columns["Year"];
                this.columnDesignation = base.Columns["Designation"];
                this.columnDepartment = base.Columns["Department"];
                this.columnDOJ = base.Columns["DOJ"];
                this.columnBankAccountNo = base.Columns["BankAccountNo"];
                this.columnAllowanceName = base.Columns["AllowanceName"];
                this.columnAllowanceActAmt = base.Columns["AllowanceActAmt"];
                this.columnDeductionName = base.Columns["DeductionName"];
                this.columnDeductionActAmt = base.Columns["DeductionActAmt"];
                this.columnNetSalary = base.Columns["NetSalary"];
                this.columnTypeAllow = base.Columns["TypeAllow"];
                this.columnTotalEmpPenalty = base.Columns["TotalEmpPenalty"];
                this.columnTotalEmpClaim = base.Columns["TotalEmpClaim"];
                this.columnTotalEmpLoan = base.Columns["TotalEmpLoan"];
                this.columnDaysPresent = base.Columns["DaysPresent"];
                this.columnWeekOff = base.Columns["WeekOff"];
                this.columndaysAbsent = base.Columns["daysAbsent"];
                this.columnHoliday = base.Columns["Holiday"];
                this.columnLeaves = base.Columns["Leaves"];
                this.columnWorkedSal = base.Columns["WorkedSal"];
                this.columnLeavedaysSal = base.Columns["LeavedaysSal"];
                this.columnHolidaysSal = base.Columns["HolidaysSal"];
                this.columnWeekOffSal = base.Columns["WeekOffSal"];
                this.columnNormalOT = base.Columns["NormalOT"];
                this.columnWeekOT = base.Columns["WeekOT"];
                this.columnHolidayOT = base.Columns["HolidayOT"];
                this.columnLatePenalty = base.Columns["LatePenalty"];
                this.columnEarlyPenalty = base.Columns["EarlyPenalty"];
                this.columnPartialPenalty = base.Columns["PartialPenalty"];
                this.columnAbsentPenalty = base.Columns["AbsentPenalty"];
                this.columnTotaldays = base.Columns["Totaldays"];
                this.columntotalAttendSal = base.Columns["totalAttendSal"];
                this.columnTotalOTSal = base.Columns["TotalOTSal"];
                this.columnTotalPenaltySal = base.Columns["TotalPenaltySal"];
                this.columnNormalOTSal = base.Columns["NormalOTSal"];
                this.columnWeekOffOTSal = base.Columns["WeekOffOTSal"];
                this.columnHolidaysOTSal = base.Columns["HolidaysOTSal"];
                this.columnLatePenaSal = base.Columns["LatePenaSal"];
                this.columnEarlyPenaSal = base.Columns["EarlyPenaSal"];
                this.columnPartialPenaSal = base.Columns["PartialPenaSal"];
                this.columnAbsentPenaSal = base.Columns["AbsentPenaSal"];
                this.columnTotalAdjustmentAmt = base.Columns["TotalAdjustmentAmt"];
                this.columnTotalDeducloanpenaty = base.Columns["TotalDeducloanpenaty"];
                this.columnClaimName = base.Columns["ClaimName"];
                this.columnPenaltyName = base.Columns["PenaltyName"];
                this.columnLoanName = base.Columns["LoanName"];
                this.columnGrossAttendanceSal = base.Columns["GrossAttendanceSal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEmpCode = new global::System.Data.DataColumn("EmpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpCode);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columnMonth = new global::System.Data.DataColumn("Month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnDesignation = new global::System.Data.DataColumn("Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignation);
                this.columnDepartment = new global::System.Data.DataColumn("Department", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartment);
                this.columnDOJ = new global::System.Data.DataColumn("DOJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOJ);
                this.columnBankAccountNo = new global::System.Data.DataColumn("BankAccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountNo);
                this.columnAllowanceName = new global::System.Data.DataColumn("AllowanceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowanceName);
                this.columnAllowanceActAmt = new global::System.Data.DataColumn("AllowanceActAmt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowanceActAmt);
                this.columnDeductionName = new global::System.Data.DataColumn("DeductionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductionName);
                this.columnDeductionActAmt = new global::System.Data.DataColumn("DeductionActAmt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductionActAmt);
                this.columnNetSalary = new global::System.Data.DataColumn("NetSalary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSalary);
                this.columnTypeAllow = new global::System.Data.DataColumn("TypeAllow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeAllow);
                this.columnTotalEmpPenalty = new global::System.Data.DataColumn("TotalEmpPenalty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalEmpPenalty);
                this.columnTotalEmpClaim = new global::System.Data.DataColumn("TotalEmpClaim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalEmpClaim);
                this.columnTotalEmpLoan = new global::System.Data.DataColumn("TotalEmpLoan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalEmpLoan);
                this.columnDaysPresent = new global::System.Data.DataColumn("DaysPresent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysPresent);
                this.columnWeekOff = new global::System.Data.DataColumn("WeekOff", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeekOff);
                this.columndaysAbsent = new global::System.Data.DataColumn("daysAbsent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaysAbsent);
                this.columnHoliday = new global::System.Data.DataColumn("Holiday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoliday);
                this.columnLeaves = new global::System.Data.DataColumn("Leaves", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaves);
                this.columnWorkedSal = new global::System.Data.DataColumn("WorkedSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkedSal);
                this.columnLeavedaysSal = new global::System.Data.DataColumn("LeavedaysSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeavedaysSal);
                this.columnHolidaysSal = new global::System.Data.DataColumn("HolidaysSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHolidaysSal);
                this.columnWeekOffSal = new global::System.Data.DataColumn("WeekOffSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeekOffSal);
                this.columnNormalOT = new global::System.Data.DataColumn("NormalOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalOT);
                this.columnWeekOT = new global::System.Data.DataColumn("WeekOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeekOT);
                this.columnHolidayOT = new global::System.Data.DataColumn("HolidayOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHolidayOT);
                this.columnLatePenalty = new global::System.Data.DataColumn("LatePenalty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatePenalty);
                this.columnEarlyPenalty = new global::System.Data.DataColumn("EarlyPenalty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyPenalty);
                this.columnPartialPenalty = new global::System.Data.DataColumn("PartialPenalty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartialPenalty);
                this.columnAbsentPenalty = new global::System.Data.DataColumn("AbsentPenalty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsentPenalty);
                this.columnTotaldays = new global::System.Data.DataColumn("Totaldays", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotaldays);
                this.columntotalAttendSal = new global::System.Data.DataColumn("totalAttendSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalAttendSal);
                this.columnTotalOTSal = new global::System.Data.DataColumn("TotalOTSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalOTSal);
                this.columnTotalPenaltySal = new global::System.Data.DataColumn("TotalPenaltySal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPenaltySal);
                this.columnNormalOTSal = new global::System.Data.DataColumn("NormalOTSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalOTSal);
                this.columnWeekOffOTSal = new global::System.Data.DataColumn("WeekOffOTSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeekOffOTSal);
                this.columnHolidaysOTSal = new global::System.Data.DataColumn("HolidaysOTSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHolidaysOTSal);
                this.columnLatePenaSal = new global::System.Data.DataColumn("LatePenaSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatePenaSal);
                this.columnEarlyPenaSal = new global::System.Data.DataColumn("EarlyPenaSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarlyPenaSal);
                this.columnPartialPenaSal = new global::System.Data.DataColumn("PartialPenaSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartialPenaSal);
                this.columnAbsentPenaSal = new global::System.Data.DataColumn("AbsentPenaSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsentPenaSal);
                this.columnTotalAdjustmentAmt = new global::System.Data.DataColumn("TotalAdjustmentAmt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAdjustmentAmt);
                this.columnTotalDeducloanpenaty = new global::System.Data.DataColumn("TotalDeducloanpenaty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDeducloanpenaty);
                this.columnClaimName = new global::System.Data.DataColumn("ClaimName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimName);
                this.columnPenaltyName = new global::System.Data.DataColumn("PenaltyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyName);
                this.columnLoanName = new global::System.Data.DataColumn("LoanName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoanName);
                this.columnGrossAttendanceSal = new global::System.Data.DataColumn("GrossAttendanceSal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossAttendanceSal);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEmpPayslipRow NewdtEmpPayslipRow() {
                return ((dtEmpPayslipRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtEmpPayslipRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtEmpPayslipRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtEmpPayslipRowChanged != null)) {
                    this.dtEmpPayslipRowChanged(this, new dtEmpPayslipRowChangeEvent(((dtEmpPayslipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtEmpPayslipRowChanging != null)) {
                    this.dtEmpPayslipRowChanging(this, new dtEmpPayslipRowChangeEvent(((dtEmpPayslipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtEmpPayslipRowDeleted != null)) {
                    this.dtEmpPayslipRowDeleted(this, new dtEmpPayslipRowChangeEvent(((dtEmpPayslipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtEmpPayslipRowDeleting != null)) {
                    this.dtEmpPayslipRowDeleting(this, new dtEmpPayslipRowChangeEvent(((dtEmpPayslipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtEmpPayslipRow(dtEmpPayslipRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EmployeePaySlipDataSet ds = new EmployeePaySlipDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtEmpPayslipDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtEmpPayslipRow : global::System.Data.DataRow {
            
            private dtEmpPayslipDataTable tabledtEmpPayslip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtEmpPayslipRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtEmpPayslip = ((dtEmpPayslipDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpCode {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.EmpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpCode\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.EmpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.EmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpName\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Month {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Month\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Year {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Year\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Designation {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.DesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Designation\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Department {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.DepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Department\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.DepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOJ {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.DOJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOJ\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.DOJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankAccountNo {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.BankAccountNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccountNo\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.BankAccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AllowanceName {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.AllowanceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllowanceName\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.AllowanceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AllowanceActAmt {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.AllowanceActAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllowanceActAmt\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.AllowanceActAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeductionName {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.DeductionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeductionName\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.DeductionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeductionActAmt {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.DeductionActAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeductionActAmt\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.DeductionActAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetSalary {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.NetSalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetSalary\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.NetSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeAllow {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TypeAllowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeAllow\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TypeAllowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalEmpPenalty {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TotalEmpPenaltyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalEmpPenalty\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TotalEmpPenaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalEmpClaim {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TotalEmpClaimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalEmpClaim\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TotalEmpClaimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalEmpLoan {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TotalEmpLoanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalEmpLoan\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TotalEmpLoanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DaysPresent {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.DaysPresentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaysPresent\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.DaysPresentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WeekOff {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.WeekOffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeekOff\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.WeekOffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string daysAbsent {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.daysAbsentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'daysAbsent\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.daysAbsentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Holiday {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.HolidayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Holiday\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.HolidayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Leaves {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.LeavesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Leaves\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.LeavesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkedSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.WorkedSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorkedSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.WorkedSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeavedaysSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.LeavedaysSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeavedaysSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.LeavedaysSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HolidaysSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.HolidaysSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HolidaysSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.HolidaysSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WeekOffSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.WeekOffSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeekOffSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.WeekOffSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NormalOT {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.NormalOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormalOT\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.NormalOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WeekOT {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.WeekOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeekOT\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.WeekOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HolidayOT {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.HolidayOTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HolidayOT\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.HolidayOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LatePenalty {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.LatePenaltyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LatePenalty\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.LatePenaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EarlyPenalty {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.EarlyPenaltyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyPenalty\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.EarlyPenaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartialPenalty {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.PartialPenaltyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartialPenalty\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.PartialPenaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AbsentPenalty {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.AbsentPenaltyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsentPenalty\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.AbsentPenaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Totaldays {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TotaldaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Totaldays\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TotaldaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string totalAttendSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.totalAttendSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalAttendSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.totalAttendSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalOTSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TotalOTSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalOTSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TotalOTSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalPenaltySal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TotalPenaltySalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPenaltySal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TotalPenaltySalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NormalOTSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.NormalOTSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormalOTSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.NormalOTSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WeekOffOTSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.WeekOffOTSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeekOffOTSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.WeekOffOTSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HolidaysOTSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.HolidaysOTSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HolidaysOTSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.HolidaysOTSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LatePenaSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.LatePenaSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LatePenaSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.LatePenaSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EarlyPenaSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.EarlyPenaSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EarlyPenaSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.EarlyPenaSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartialPenaSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.PartialPenaSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartialPenaSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.PartialPenaSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AbsentPenaSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.AbsentPenaSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsentPenaSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.AbsentPenaSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalAdjustmentAmt {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TotalAdjustmentAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAdjustmentAmt\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TotalAdjustmentAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalDeducloanpenaty {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.TotalDeducloanpenatyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDeducloanpenaty\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.TotalDeducloanpenatyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClaimName {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.ClaimNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClaimName\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.ClaimNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PenaltyName {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.PenaltyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyName\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.PenaltyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LoanName {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.LoanNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoanName\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.LoanNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GrossAttendanceSal {
                get {
                    try {
                        return ((string)(this[this.tabledtEmpPayslip.GrossAttendanceSalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossAttendanceSal\' in table \'dtEmpPayslip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEmpPayslip.GrossAttendanceSalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpCodeNull() {
                return this.IsNull(this.tabledtEmpPayslip.EmpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpCodeNull() {
                this[this.tabledtEmpPayslip.EmpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNameNull() {
                return this.IsNull(this.tabledtEmpPayslip.EmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNameNull() {
                this[this.tabledtEmpPayslip.EmpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthNull() {
                return this.IsNull(this.tabledtEmpPayslip.MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthNull() {
                this[this.tabledtEmpPayslip.MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearNull() {
                return this.IsNull(this.tabledtEmpPayslip.YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearNull() {
                this[this.tabledtEmpPayslip.YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDesignationNull() {
                return this.IsNull(this.tabledtEmpPayslip.DesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDesignationNull() {
                this[this.tabledtEmpPayslip.DesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartmentNull() {
                return this.IsNull(this.tabledtEmpPayslip.DepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartmentNull() {
                this[this.tabledtEmpPayslip.DepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOJNull() {
                return this.IsNull(this.tabledtEmpPayslip.DOJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOJNull() {
                this[this.tabledtEmpPayslip.DOJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankAccountNoNull() {
                return this.IsNull(this.tabledtEmpPayslip.BankAccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankAccountNoNull() {
                this[this.tabledtEmpPayslip.BankAccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllowanceNameNull() {
                return this.IsNull(this.tabledtEmpPayslip.AllowanceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllowanceNameNull() {
                this[this.tabledtEmpPayslip.AllowanceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllowanceActAmtNull() {
                return this.IsNull(this.tabledtEmpPayslip.AllowanceActAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllowanceActAmtNull() {
                this[this.tabledtEmpPayslip.AllowanceActAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeductionNameNull() {
                return this.IsNull(this.tabledtEmpPayslip.DeductionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeductionNameNull() {
                this[this.tabledtEmpPayslip.DeductionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeductionActAmtNull() {
                return this.IsNull(this.tabledtEmpPayslip.DeductionActAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeductionActAmtNull() {
                this[this.tabledtEmpPayslip.DeductionActAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSalaryNull() {
                return this.IsNull(this.tabledtEmpPayslip.NetSalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSalaryNull() {
                this[this.tabledtEmpPayslip.NetSalaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeAllowNull() {
                return this.IsNull(this.tabledtEmpPayslip.TypeAllowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeAllowNull() {
                this[this.tabledtEmpPayslip.TypeAllowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalEmpPenaltyNull() {
                return this.IsNull(this.tabledtEmpPayslip.TotalEmpPenaltyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalEmpPenaltyNull() {
                this[this.tabledtEmpPayslip.TotalEmpPenaltyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalEmpClaimNull() {
                return this.IsNull(this.tabledtEmpPayslip.TotalEmpClaimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalEmpClaimNull() {
                this[this.tabledtEmpPayslip.TotalEmpClaimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalEmpLoanNull() {
                return this.IsNull(this.tabledtEmpPayslip.TotalEmpLoanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalEmpLoanNull() {
                this[this.tabledtEmpPayslip.TotalEmpLoanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDaysPresentNull() {
                return this.IsNull(this.tabledtEmpPayslip.DaysPresentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDaysPresentNull() {
                this[this.tabledtEmpPayslip.DaysPresentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeekOffNull() {
                return this.IsNull(this.tabledtEmpPayslip.WeekOffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeekOffNull() {
                this[this.tabledtEmpPayslip.WeekOffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdaysAbsentNull() {
                return this.IsNull(this.tabledtEmpPayslip.daysAbsentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdaysAbsentNull() {
                this[this.tabledtEmpPayslip.daysAbsentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHolidayNull() {
                return this.IsNull(this.tabledtEmpPayslip.HolidayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHolidayNull() {
                this[this.tabledtEmpPayslip.HolidayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeavesNull() {
                return this.IsNull(this.tabledtEmpPayslip.LeavesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeavesNull() {
                this[this.tabledtEmpPayslip.LeavesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkedSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.WorkedSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkedSalNull() {
                this[this.tabledtEmpPayslip.WorkedSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeavedaysSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.LeavedaysSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeavedaysSalNull() {
                this[this.tabledtEmpPayslip.LeavedaysSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHolidaysSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.HolidaysSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHolidaysSalNull() {
                this[this.tabledtEmpPayslip.HolidaysSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeekOffSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.WeekOffSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeekOffSalNull() {
                this[this.tabledtEmpPayslip.WeekOffSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormalOTNull() {
                return this.IsNull(this.tabledtEmpPayslip.NormalOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormalOTNull() {
                this[this.tabledtEmpPayslip.NormalOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeekOTNull() {
                return this.IsNull(this.tabledtEmpPayslip.WeekOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeekOTNull() {
                this[this.tabledtEmpPayslip.WeekOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHolidayOTNull() {
                return this.IsNull(this.tabledtEmpPayslip.HolidayOTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHolidayOTNull() {
                this[this.tabledtEmpPayslip.HolidayOTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatePenaltyNull() {
                return this.IsNull(this.tabledtEmpPayslip.LatePenaltyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatePenaltyNull() {
                this[this.tabledtEmpPayslip.LatePenaltyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyPenaltyNull() {
                return this.IsNull(this.tabledtEmpPayslip.EarlyPenaltyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyPenaltyNull() {
                this[this.tabledtEmpPayslip.EarlyPenaltyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartialPenaltyNull() {
                return this.IsNull(this.tabledtEmpPayslip.PartialPenaltyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartialPenaltyNull() {
                this[this.tabledtEmpPayslip.PartialPenaltyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsentPenaltyNull() {
                return this.IsNull(this.tabledtEmpPayslip.AbsentPenaltyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsentPenaltyNull() {
                this[this.tabledtEmpPayslip.AbsentPenaltyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotaldaysNull() {
                return this.IsNull(this.tabledtEmpPayslip.TotaldaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotaldaysNull() {
                this[this.tabledtEmpPayslip.TotaldaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalAttendSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.totalAttendSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalAttendSalNull() {
                this[this.tabledtEmpPayslip.totalAttendSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalOTSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.TotalOTSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalOTSalNull() {
                this[this.tabledtEmpPayslip.TotalOTSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPenaltySalNull() {
                return this.IsNull(this.tabledtEmpPayslip.TotalPenaltySalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPenaltySalNull() {
                this[this.tabledtEmpPayslip.TotalPenaltySalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormalOTSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.NormalOTSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormalOTSalNull() {
                this[this.tabledtEmpPayslip.NormalOTSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeekOffOTSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.WeekOffOTSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeekOffOTSalNull() {
                this[this.tabledtEmpPayslip.WeekOffOTSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHolidaysOTSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.HolidaysOTSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHolidaysOTSalNull() {
                this[this.tabledtEmpPayslip.HolidaysOTSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatePenaSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.LatePenaSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatePenaSalNull() {
                this[this.tabledtEmpPayslip.LatePenaSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEarlyPenaSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.EarlyPenaSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEarlyPenaSalNull() {
                this[this.tabledtEmpPayslip.EarlyPenaSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartialPenaSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.PartialPenaSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartialPenaSalNull() {
                this[this.tabledtEmpPayslip.PartialPenaSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbsentPenaSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.AbsentPenaSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbsentPenaSalNull() {
                this[this.tabledtEmpPayslip.AbsentPenaSalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAdjustmentAmtNull() {
                return this.IsNull(this.tabledtEmpPayslip.TotalAdjustmentAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAdjustmentAmtNull() {
                this[this.tabledtEmpPayslip.TotalAdjustmentAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDeducloanpenatyNull() {
                return this.IsNull(this.tabledtEmpPayslip.TotalDeducloanpenatyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDeducloanpenatyNull() {
                this[this.tabledtEmpPayslip.TotalDeducloanpenatyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClaimNameNull() {
                return this.IsNull(this.tabledtEmpPayslip.ClaimNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClaimNameNull() {
                this[this.tabledtEmpPayslip.ClaimNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenaltyNameNull() {
                return this.IsNull(this.tabledtEmpPayslip.PenaltyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenaltyNameNull() {
                this[this.tabledtEmpPayslip.PenaltyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLoanNameNull() {
                return this.IsNull(this.tabledtEmpPayslip.LoanNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLoanNameNull() {
                this[this.tabledtEmpPayslip.LoanNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossAttendanceSalNull() {
                return this.IsNull(this.tabledtEmpPayslip.GrossAttendanceSalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossAttendanceSalNull() {
                this[this.tabledtEmpPayslip.GrossAttendanceSalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtEmpPayslipRowChangeEvent : global::System.EventArgs {
            
            private dtEmpPayslipRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEmpPayslipRowChangeEvent(dtEmpPayslipRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEmpPayslipRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591